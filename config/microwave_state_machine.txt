StateMachine.add('START', Start(robot, config['nav_initial']), transitions={'success':'NAVIGATE_TO_OPEN_MICROWAVE', 'abort':'abort', 'preempt':'preempt', 'fail':'abort'})

StateMachine.add('NAVIGATE_TO_OPEN_MICROWAVE', Navigate(robot, config['nav_open_microwave']), transitions={'success':'DETECT_TO_OPEN_MICROWAVE', 'preempt':'preempt', 'abort':'abort', 'fail':'NAVIGATE_TO_OPEN_MICROWAVE_QUERY_USER'})
StateMachine.add('NAVIGATE_TO_OPEN_MICROWAVE_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'START', 'continue':'NAVIGATE_TO_OPEN_MICROWAVE', 'next_state':'DETECT_TO_OPEN_MICROWAVE', 'teleoperate':'NAVIGATE_TO_OPEN_MICROWAVE_TELEOPERATE' })
StateMachine.add('NAVIGATE_TO_OPEN_MICROWAVE_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'NAVIGATE_TO_OPEN_MICROWAVE_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('DETECT_TO_OPEN_MICROWAVE', LookForMarker(robot, 'hanger'), transitions={'success':'OPEN_MICROWAVE', 'preempt':'preempt', 'abort':'abort', 'fail':'DETECT_TO_OPEN_MICROWAVE_QUERY_USER'})
StateMachine.add('DETECT_TO_OPEN_MICROWAVE_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'NAVIGATE_TO_OPEN_MICROWAVE', 'continue':'DETECT_TO_OPEN_MICROWAVE', 'next_state':'OPEN_MICROWAVE', 'teleoperate':'DETECT_TO_OPEN_MICROWAVE_TELEOPERATE' })
StateMachine.add('DETECT_TO_OPEN_MICROWAVE_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'DETECT_TO_OPEN_MICROWAVE_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('OPEN_MICROWAVE', ManipulateFromMarkerIK(robot, 'hanger', config['manipulation_open_microwave']), transitions={'success':'NAVIGATE_TO_PICK_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'OPEN_MICROWAVE_QUERY_USER'})
StateMachine.add('OPEN_MICROWAVE_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'DETECT_TO_OPEN_MICROWAVE', 'continue':'OPEN_MICROWAVE', 'next_state':'NAVIGATE_TO_PICK_FOOD', 'teleoperate':'OPEN_MICROWAVE_TELEOPERATE' })
StateMachine.add('OPEN_MICROWAVE_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'OPEN_MICROWAVE_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('NAVIGATE_TO_PICK_FOOD', Navigate(robot, config['nav_pick']), transitions={'success':'LOOK_FOR_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'NAVIGATE_TO_PICK_FOOD_QUERY_USER'})
StateMachine.add('NAVIGATE_TO_PICK_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'OPEN_MICROWAVE', 'continue':'NAVIGATE_TO_PICK_FOOD', 'next_state':'LOOK_FOR_FOOD', 'teleoperate':'NAVIGATE_TO_PICK_FOOD_TELEOPERATE' })
StateMachine.add('NAVIGATE_TO_PICK_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'NAVIGATE_TO_PICK_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('LOOK_FOR_FOOD', LookForMarker(robot, 'pick', head_tilt=-0.4), transitions={'success':'PICK_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'LOOK_FOR_FOOD_QUERY_USER'})
StateMachine.add('LOOK_FOR_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'NAVIGATE_TO_PICK_FOOD', 'continue':'LOOK_FOR_FOOD', 'next_state':'PICK_FOOD', 'teleoperate':'LOOK_FOR_FOOD_TELEOPERATE' })
StateMachine.add('LOOK_FOR_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'LOOK_FOR_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('PICK_FOOD', ManipulateFromMarkerIK(robot, 'pick', config['manipulation_pick']), transitions={'success':'NAVIGATE_TO_PLACE_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'PICK_FOOD_QUERY_USER'})
StateMachine.add('PICK_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'LOOK_FOR_FOOD', 'continue':'PICK_FOOD', 'next_state':'NAVIGATE_TO_PLACE_FOOD', 'teleoperate':'PICK_FOOD_TELEOPERATE' })
StateMachine.add('PICK_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'PICK_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('NAVIGATE_TO_PLACE_FOOD', Navigate(robot, config['nav_place']), transitions={'success':'DETECT_TO_PLACE_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'NAVIGATE_TO_PLACE_FOOD_QUERY_USER'})
StateMachine.add('NAVIGATE_TO_PLACE_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'PICK_FOOD', 'continue':'NAVIGATE_TO_PLACE_FOOD', 'next_state':'DETECT_TO_PLACE_FOOD', 'teleoperate':'NAVIGATE_TO_PLACE_FOOD_TELEOPERATE' })
StateMachine.add('NAVIGATE_TO_PLACE_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'NAVIGATE_TO_PLACE_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('DETECT_TO_PLACE_FOOD', LookForMarker(robot, 'hanger'), transitions={'success':'PLACE_FOOD', 'preempt':'preempt', 'abort':'abort', 'fail':'DETECT_TO_PLACE_FOOD_QUERY_USER'})
StateMachine.add('DETECT_TO_PLACE_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'NAVIGATE_TO_PLACE_FOOD', 'continue':'DETECT_TO_PLACE_FOOD', 'next_state':'PLACE_FOOD', 'teleoperate':'DETECT_TO_PLACE_FOOD_TELEOPERATE' })
StateMachine.add('DETECT_TO_PLACE_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'DETECT_TO_PLACE_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('PLACE_FOOD', ManipulateFromMarkerIK(robot, 'hanger', config['manipulation_place']), transitions={'success':'CLOSE_MICROWAVE', 'preempt':'preempt', 'abort':'abort', 'fail':'PLACE_FOOD_QUERY_USER'})
StateMachine.add('PLACE_FOOD_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'DETECT_TO_PLACE_FOOD', 'continue':'PLACE_FOOD', 'next_state':'CLOSE_MICROWAVE', 'teleoperate':'PLACE_FOOD_TELEOPERATE' })
StateMachine.add('PLACE_FOOD_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'PLACE_FOOD_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('CLOSE_MICROWAVE', ManipulateWithJointValues(robot, config['manipulation_close_microwave']), transitions={'success':'END', 'preempt':'preempt', 'abort':'abort', 'fail':'CLOSE_MICROWAVE_QUERY_USER'})
StateMachine.add('CLOSE_MICROWAVE_QUERY_USER', QueryUser(ui), transitions={'abort':'abort', 'previous_state':'PLACE_FOOD', 'continue':'CLOSE_MICROWAVE', 'next_state':'END', 'teleoperate':'CLOSE_MICROWAVE_TELEOPERATE' })
StateMachine.add('CLOSE_MICROWAVE_TELEOPERATE', Teleoperate(robot, ui), transitions={'success':'CLOSE_MICROWAVE_QUERY_USER', 'abort':'abort', 'preempt':'preempt'})

StateMachine.add('END', End(), transitions={'success':'success', 'abort':'abort', 'preempt':'preempt', 'fail':'abort'})
